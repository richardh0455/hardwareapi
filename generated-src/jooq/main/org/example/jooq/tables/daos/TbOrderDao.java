/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.example.jooq.tables.TbOrder;
import org.example.jooq.tables.records.TbOrderRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbOrderDao extends DAOImpl<TbOrderRecord, org.example.jooq.tables.pojos.TbOrder, Integer> {

    /**
     * Create a new TbOrderDao without any configuration
     */
    public TbOrderDao() {
        super(TbOrder.TB_ORDER, org.example.jooq.tables.pojos.TbOrder.class);
    }

    /**
     * Create a new TbOrderDao with an attached configuration
     */
    public TbOrderDao(Configuration configuration) {
        super(TbOrder.TB_ORDER, org.example.jooq.tables.pojos.TbOrder.class, configuration);
    }

    @Override
    public Integer getId(org.example.jooq.tables.pojos.TbOrder object) {
        return object.getOrderId();
    }

    /**
     * Fetch records that have <code>order_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchRangeOfOrderId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TbOrder.TB_ORDER.ORDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchByOrderId(Integer... values) {
        return fetch(TbOrder.TB_ORDER.ORDER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>order_id = value</code>
     */
    public org.example.jooq.tables.pojos.TbOrder fetchOneByOrderId(Integer value) {
        return fetchOne(TbOrder.TB_ORDER.ORDER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>order_id = value</code>
     */
    public Optional<org.example.jooq.tables.pojos.TbOrder> fetchOptionalByOrderId(Integer value) {
        return fetchOptional(TbOrder.TB_ORDER.ORDER_ID, value);
    }

    /**
     * Fetch records that have <code>order_customer_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchRangeOfOrderCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TbOrder.TB_ORDER.ORDER_CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_customer_id IN (values)</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchByOrderCustomerId(Integer... values) {
        return fetch(TbOrder.TB_ORDER.ORDER_CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>order_created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchRangeOfOrderCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TbOrder.TB_ORDER.ORDER_CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_created_at IN (values)</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchByOrderCreatedAt(LocalDateTime... values) {
        return fetch(TbOrder.TB_ORDER.ORDER_CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>order_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchRangeOfOrderStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(TbOrder.TB_ORDER.ORDER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_status IN (values)</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchByOrderStatus(String... values) {
        return fetch(TbOrder.TB_ORDER.ORDER_STATUS, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TbOrder.TB_ORDER.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.example.jooq.tables.pojos.TbOrder> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(TbOrder.TB_ORDER.UPDATED_AT, values);
    }
}
