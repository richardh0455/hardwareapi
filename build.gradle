plugins {
    id 'java'
    id "org.flywaydb.flyway" version "9.8.1"
    id 'nu.studer.jooq' version '8.1'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    //Database
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.27'
    jooqGenerator group: 'org.postgresql', name: 'postgresql', version: '42.5.1'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.10.2'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'postgres'
    password = 'postgres'
    driver = 'org.postgresql.Driver'
    cleanDisabled=false
    schemas = ['public']
    table = 'tb_schema'
}

test {
    useJUnitPlatform()
}

jooq {
    version = '3.17.6'  // the default (can be omitted)
    edition = nu.studer.gradle.jooq.JooqEdition.OSS  // the default (can be omitted)

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/postgres'
                    user = 'postgres'
                    password = 'postgres'
                    properties {
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        forcedTypes {

                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                        daos = true
                    }
                    target {
                        packageName = 'org.example.jooq'
                        directory = 'generated-src/jooq/main'  // default (can be omitted)
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}